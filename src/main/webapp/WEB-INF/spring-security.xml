<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
                    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                    http://www.springframework.org/schema/security
                    http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<global-method-security pre-post-annotations="enabled" />

	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="userDetailsService" />
	</authentication-manager>
	
	<beans:bean id="userDetailsService" class="com.tonearena.security.AuthorizationDetailService"/>

	<http auto-config="true" use-expressions="false" entry-point-ref="http403EntryPoint">
		    <intercept-url pattern="/song/**" access="ROLE_USER"/>
	        <intercept-url pattern="/**" access="ROLE_ANONYMOUS"/>
	        <custom-filter ref="jwtTokenFilter" position="PRE_AUTH_FILTER"/>
	</http>
	
	<beans:bean id="http403EntryPoint" class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint">
    </beans:bean>
	
	<beans:bean id="jwtTokenFilter" class="com.tonearena.security.StatelessAuthenticationFilter">
		<beans:constructor-arg ref="authenticationService"/>
	</beans:bean>
	
	<beans:bean id="authenticationService" class="com.tonearena.security.TokenAuthenticationService">
		<beans:constructor-arg type="String" value="tooManySecrets"/>
		<beans:constructor-arg ref="userDetailsService"/>	
	</beans:bean>

</beans:beans>